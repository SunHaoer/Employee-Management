@model EmployeeManagementMVC.Models.EmployeeIndexModel

@{
    ViewData["Title"] = "Index";
}

<h2>Index</h2>

<p>
    hi @(Model.Username)
</p>

<p>
    <a asp-controller="EmployeesLogin" asp-action="Logout">Logout</a>
</p>

<p>
    <a asp-action="Create">Create New</a>
</p>

<form asp-controller="Employees" asp-action="Index">
    <p>
        Id/FirstName/LastName: <input type="text" name="searchString" value="@(Model.SearchString)">
        OrderBy:
        <select asp-for="OrderByString" value="@(Model.OrderByString)">
            <option value="Id">Id</option>
            <option value="FirstName">FirstName</option>
            <option value="LastName">LastName</option>
            <option value="Gender">Gender</option>
            <option value="Birth">Birth</option>
            <option value="Address">Address</option>
            <option value="Phone">Phone</option>
            <option value="Email">Email</option>
            <option value="Department">Department</option>
        </select>
        <input type="radio" name="sortType" value="positive" @(Model.SortType == "positive" ? "checked" : "") /> Positive
        <input type="radio" name="sortType" value="reversed" @(Model.SortType == "reversed" ? "checked" : "") /> reversed
        <input type="submit" value="submit" />
    </p>
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeList[0].FirstName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeList[0].LastName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeList[0].Gender)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeList[0].Birth)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeList[0].Address)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeList[0].Phone)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeList[0].Email)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmployeeList[0].Department)
            </th>

            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model.EmployeeList)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Gender)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Birth)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Address)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Phone)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Email)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Department)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                    <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>

<p>
    Now: @(Model.EmployeeList.PageIndex)    Total: @(Model.EmployeeList.TotalPages)
</p>

@{
    var prevDisabled = !Model.EmployeeList.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.EmployeeList.HasNextPage ? "disabled" : "";
}

<a asp-action="Index"
    asp-route-pageIndex="@(Model.EmployeeList.PageIndex - 1)"
    asp-route-orderByString="@(Model.OrderByString)"   
    asp-route-searchString="@(Model.SearchString)"
    asp-route-sortType="@(Model.SortType)"
    class="btn btn-default @prevDisabled">
    Previous
</a>
<a asp-action="Index"
    asp-route-pageIndex="@(Model.EmployeeList.PageIndex + 1)"
    asp-route-orderByString="@(Model.OrderByString)"   
    asp-route-searchString="@(Model.SearchString)"
    asp-route-sortType="@(Model.SortType)"
    class="btn btn-default @nextDisabled">
    Next
</a>

